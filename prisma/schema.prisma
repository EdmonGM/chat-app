generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          String @id @default(cuid())
  username    String @unique
  password    String
  name        String
  avatar      String?
  messages    Message[]
  chatMembers ChatMember[]
  createdAt   DateTime @default(now())
  sentRequests FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
}

model Message {
  id       String @id @default(cuid())
  content  String
  chatId   String
  chat     ChatRoom @relation(fields: [chatId], references: [id])
  senderId String
  sender   User @relation(fields: [senderId], references: [id])

}

model FriendRequest {
  senderId  String
  sender User @relation("SentRequests", fields: [senderId], references: [id])
  receiverId String
  receiver User @relation("ReceivedRequests", fields: [receiverId], references: [id])
  sentAt DateTime @default(now())
  @@id([senderId, receiverId])
}

model ChatRoom {
  id        String @id @default(cuid())
  name      String?
  // TODO: Add isGroup Boolean
  members   ChatMember[]
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatMember {
  id       String @id @default(cuid())
  userId   String
  chatId   String
  user     User @relation(fields: [userId], references: [id])
  chat     ChatRoom @relation(fields: [chatId], references: [id])
  joinedAt DateTime @default(now())
  @@unique([userId, chatId])
}